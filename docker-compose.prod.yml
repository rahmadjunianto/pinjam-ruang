# Production Docker Compose Configuration
# Use this for production deployment

version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: adminlte_laravel_app_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./public/uploads:/var/www/html/public/uploads
      - ssl_certs:/etc/ssl/certs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=adminlte_laravel
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - adminlte_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: adminlte_laravel_db_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: adminlte_laravel
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./docker/mysql/prod.cnf:/etc/mysql/conf.d/prod.cnf
      - ./backups:/backups
    networks:
      - adminlte_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: adminlte_laravel_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - adminlte_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    container_name: adminlte_laravel_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ssl_certs:/etc/ssl/certs
    depends_on:
      - app
    networks:
      - adminlte_network

volumes:
  mysql_data_prod:
  redis_data_prod:
  ssl_certs:

networks:
  adminlte_network:
    driver: bridge
